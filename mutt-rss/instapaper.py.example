#!/usr/bin/env python

import mailbox
import os.path
import sys
import urllib, urllib2

# Instapaper credentials
username = "__INSTAPAPER USERNAME__"
password = "__INSTAPAPER PASSWORD__""
# RSS maildir
base = "~/mail/rss"

def get_url_list(base):
    """This function reads the messages in base/Instapaper and returns a list of
    URLs that are to be added to instapaper.  It also marks the messages as read
    and moves them to base/Archive."""

    # Open base/Instapaper and base/Archive.  maildir is a dictionary where
    # maildir["Archive"] is a mailbox.Maildir instance representing base/Archive
    # (and the same for maildir["Instapaper"])
    maildir = {}
    for f in ("Archive", "Instapaper"):
        f_path = os.path.join(os.path.expanduser(base), f)
        try:
            maildir[f] = mailbox.Maildir(f_path, None, False)
        except:
            print "The mailbox %s could not be opened" % (f_path, )
            sys.exit(1)

    # Check that there are actually messages to process
    if not maildir["Instapaper"].__len__():
        sys.exit(0)

    # Get the URLs and move the message to base/Archive
    urls = []
    while maildir["Instapaper"].__len__():
        message = maildir["Instapaper"].popitem()
        urls.append(message[1].get("X-RSS-URL"))
        message[1].set_flags("S")
        maildir["Archive"].add(message[1])

    return urls


def post_to_instapaper(username, password, url):
    """Add URLs to the instapaper account.  This function prints a status 
    message as well."""

    # Add via the Instapaper Simple API
    data = urllib.urlencode({"username": username,
                             "password": password,
                             "url": url})
    response = urllib2.urlopen("https://www.instapaper.com/api/add", data)

    # If it went bad then drop out to avoid hammering the API
    error_codes = {400: "Bad request or exceeded the rate limit",
                   403: "Invalid username or password",
                   500: "The service encountered an error.  Please try again later"}
    if response.getcode() != 201:
        print error_codes[response.get_code()]
        sys.exit(1)
    else:
        print "Successfully added %s to account %s" % (url, username)

    return True


def main():
    urls = get_url_list("/home/andrewlkho/mail/rss")
    for url in urls:
        post_to_instapaper(username, password, url)


if __name__ == "__main__":
    main()
