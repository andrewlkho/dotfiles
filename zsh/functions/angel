# An old passphrase generator I used to use

angel () {
    # Parse out the options
    local -a OPT_HELP OPT_LONG OPT_SPACE
    zparseopts -D -- h=OPT_HELP -help=OPT_HELP l=OPT_LONG -long=OPT_LONG s=OPT_SPACE -space=OPT_SPACE

    # Print out the help text if appropriate
    if [[ -n ${OPT_HELP} || $# == 0 ]]; then
        cat << 'EOT' | cut -c 13-
            Generate a passphrase based on a given salt

            Usage: angel [OPTIONS] <key>

            Valid options are as follows:
                -h, --help   Display this help text
                -l, --long   Create 16 character long passphrases using SHA-1 (the default
                             is to create 8 character long MD5-based passphrases)
                -s, --space  Insert a space every four characters for readability
EOT
        return 1
    fi

    local SALT PASSPHRASE

    # Retrieve the salt and generate a passphrase
    echo -n 'Salt: ' && read -s SALT
    if [[ -n ${OPT_LONG} ]]; then
        PASSPHRASE=$( echo -n "`echo -n ${SALT}:$* | openssl dgst -sha1`:${SALT}" | openssl dgst -sha1 | cut -c -16 )
    else
        PASSPHRASE=`echo -n ${SALT}:$* | openssl dgst -md5 | cut -c -8`
    fi

    # Print the passphrase (spaced if appropriate)
    echo -n "\nPassphrase: "
    if [[ -n ${OPT_SPACE} ]]; then
        echo ${PASSPHRASE} | sed -e 's/..../& /g; s/:$//'
    else
        echo ${PASSPHRASE}
    fi

    return 0
}
