set nocompatible

" vim-pathogen
source $XDG_CONFIG_HOME/vim/bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect("$XDG_CONFIG_HOME/vim/bundle/{}")
filetype plugin indent on

" alternative paths
set runtimepath+=$XDG_CONFIG_HOME/vim,$XDG_CONFIG_HOME/vim/after

" UI
set autoindent
set backspace=indent,eol,start
set colorcolumn=80
set lazyredraw
set listchars=tab:>-,trail:-,eol:¬
set number
set scrolloff=5
set splitbelow
set splitright

" session files, and infinite undo
set undofile
set undodir=$XDG_CACHE_HOME/vim/undo//
set nobackup
set writebackup
set backupdir=$XDG_CACHE_HOME/vim/backup//
set directory=$XDG_CACHE_HOME/vim/swap//
set viminfo+=n$XDG_CACHE_HOME/vim/viminfo
let g:netrw_dirhistmax=0 " Don't create .netrwhist

" indentation is 4 spaces, don't use tabs (but if present display as 4 spaces)
set expandtab
set softtabstop=4
set shiftwidth=4
set tabstop=4

" searching
set incsearch
set hlsearch
set ignorecase
set smartcase
nmap <leader>q :nohlsearch<CR>

" utf-8
set encoding=utf-8
set fileencoding=utf-8

" buffers and netrw / vim-vinegar
set hidden
nmap ]b :bnext<CR>
nmap [b :bprevious <CR>
nmap <leader>1 :bfirst<CR>
nmap <leader>2 :bfirst<CR>:bnext<CR>
nmap <leader>3 :bfirst<CR>:bnext 2<CR>
nmap <leader>4 :bfirst<CR>:bnext 3<CR>
nmap <leader>5 :bfirst<CR>:bnext 4<CR>
nmap <leader>6 :bfirst<CR>:bnext 5<CR>
nmap <leader>7 :bfirst<CR>:bnext 6<CR>
nmap <leader>8 :bfirst<CR>:bnext 7<CR>
nmap <leader>9 :bfirst<CR>:bnext 8<CR>

" toggles
nnoremap <leader>p :setlocal paste! paste?<CR>
nnoremap <leader>i :setlocal list! list?<CR>

" visual appearance
syntax enable
colorscheme gruvbox
set background=dark
set cursorline
let g:airline_theme='gruvbox'
let g:airline#extensions#tabline#enabled = 1

" ale
let g:ale_lint_on_text_changed = 'never'
let g:ale_sign_warning = '▲'
let g:ale_sign_error = '✗'
let g:ale_set_highlights = 0

" vim-gitgutter: run on save (see also .vim/after/plugin/gitgutter.vim) and
" change default symbol (hat tip: https://statico.github.io/vim3.html)
autocmd BufWritePost * GitGutter
let g:gitgutter_sign_added = '∙'
let g:gitgutter_sign_modified = '∙'
let g:gitgutter_sign_removed = '∙'
let g:gitgutter_sign_modified_removed = '∙'
if v:version < 800
    let g:gitgutter_async=0
endif

" vim-commentary
vmap <leader>\ gc

" vimfiler
" let g:loaded_netrwPlugin = 1
nnoremap <leader>t :VimFilerExplorer -toggle -no-quit<CR>
nnoremap <leader>w :VimFilerCreate -explorer -buffer-name=notes -force-quit ~/Dropbox/Notes<CR>
let g:vimfiler_no_default_key_mappings=1
let g:vimfiler_tree_leaf_icon = ''
let g:vimfiler_tree_opened_icon = '▾'
let g:vimfiler_tree_closed_icon = '▸'
let g:vimfiler_marked_file_icon = '∙'
let g:vimfiler_tree_indentation = 2
autocmd FileType vimfiler call s:vimfilerinit()
function! s:vimfilerinit()
    setlocal nonumber
    nmap <buffer> gg <Plug>(vimfiler_cursor_top)
    nmap <buffer> G <Plug>(vimfiler_cursor_top)<Plug>(vimfiler_loop_cursor_up)
    nmap <buffer> <space> <Plug>(vimfiler_toggle_mark_current_line)
    nmap <buffer> l <Plug>(vimfiler_expand_tree)
    nmap <buffer> <enter> <Plug>(vimfiler_edit_file)
    nmap <buffer> h <Plug>(vimfiler_smart_h)
    nmap <buffer> . <Plug>(vimfiler_toggle_visible_ignore_files)
    nmap <buffer> q <Plug>(vimfiler_exit)
    nmap <buffer> <C-l> <Plug>(vimfiler_redraw_screen)
endfunction

if isdirectory($HOME . "/Dropbox/Notes/Scratchpad")
    " let fn = $HOME . "/Dropbox/Notes/Scratchpad/" . strftime("%Y-%m-%d %H.%M.%S.md")
    " nmap <expr> <leader>s ":edit " . expand(fn) . "<CR>"
    nmap <expr> <leader>s ":edit " . $HOME . "/Dropbox/Notes/Scratchpad/" . expand(strftime("%Y-%m-%d %H.%M.%S.md")) . "<CR>"
endif
